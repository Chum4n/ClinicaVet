/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinicaveterinaria.Visao;

import clinicaveterinaria.Banco.Conexao;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author João Vitor
 */
public class telaEstoque extends javax.swing.JFrame {
    int op;
    int id = 0;
    String Nome;
    String Validade;
    String Valor;
    int Qtd;
    String Descricao;
    String Categoria;
    String Fornecedor;
    Connection conn = null;
    PreparedStatement stm = null;
    ResultSet rs = null;
    
/**
     * Creates new form login
     */
    public telaEstoque() {
        
        initComponents();
        prepararTabela();
        PopularJTable("SELECT medicamento.idmedicamento, medicamento.nome, medicamento.valor, medicamento.qtd, medicamento.descricao, medicamento.validade, categoria.nome_categoria, fornecedor.nome_fornecedor FROM medicamento, categoria, fornecedor WHERE medicamento.categoria_idcategoria = categoria.idcategoria AND medicamento.fornecedor_idfornecedor = fornecedor.idfornecedor order by medicamento.nome");
        inserirCategoria();
        inserirFornecedor();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnNovoM = new javax.swing.JButton();
        btnEditarM = new javax.swing.JButton();
        btnDeletarM = new javax.swing.JButton();
        txtValor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnCategoria = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        cmbCategoria = new javax.swing.JComboBox<>();
        cmbFornecedor = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jLabel7.setText("jLabel7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Estoque de Medicamentos");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel1FocusGained(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Estoque"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Valor", "Quantidade", "Descrição", "Fornecedor"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnNovoM.setText("Inserir Novo Medicamento");
        btnNovoM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoMActionPerformed(evt);
            }
        });

        btnEditarM.setText("Editar Medicamento");
        btnEditarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarMActionPerformed(evt);
            }
        });

        btnDeletarM.setText("Deletar Medicamento");
        btnDeletarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarMActionPerformed(evt);
            }
        });

        jLabel1.setText("Pesquisar por nome:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnCategoria.setText("Inserir Categoria");
        btnCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategoriaActionPerformed(evt);
            }
        });

        jButton1.setText("Atualizar Dados");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cmbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione a Categoria", " " }));

        cmbFornecedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o Fornecedor" }));

        jLabel2.setText("Categoria:");

        jLabel3.setText("Fornecedor");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(cmbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnDeletarM, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditarM)
                        .addGap(10, 10, 10)
                        .addComponent(btnNovoM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 233, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNovoM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDeletarM, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditarM, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarMActionPerformed
         if(jTable1.getSelectedRow() > -1){
             Medicamento med = new Medicamento();
             med.setID(id);
             med.setNome(Nome);
             med.setValor(Valor);
             med.setQtd(Qtd);
             med.setDescricao(Descricao);
             med.setValidade(Validade);
             med.setCategoria(Categoria);
             med.setFornecedor(Fornecedor);
             alterarMedicamento janela = new alterarMedicamento();
             janela.exportarId(med);
             janela.setVisible(true);

        }
        else{
        JOptionPane.showMessageDialog(this,
                "É necessário selecionar uma linha.");
        
        }
        

    }//GEN-LAST:event_btnEditarMActionPerformed

    private void btnNovoMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoMActionPerformed
        inserirMedicamento janela = new inserirMedicamento();
        janela.setVisible(true);
  
    }//GEN-LAST:event_btnNovoMActionPerformed

    private void btnDeletarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarMActionPerformed
        if(jTable1.getSelectedRow() > -1){
            int opcao =  JOptionPane.showConfirmDialog(this,
                    "Deseja realmente deletar o medicamento?",
                    "Selecione uma opção.",
                    JOptionPane.YES_NO_OPTION
                    );
                    if(opcao == 0){
                    deletarMedicamento(id);
                    }
    }//GEN-LAST:event_btnDeletarMActionPerformed
        PopularJTable("SELECT medicamento.idmedicamento, medicamento.nome, medicamento.valor, medicamento.qtd, medicamento.descricao, medicamento.validade, categoria.nome_categoria, fornecedor.nome_fornecedor FROM medicamento, categoria, fornecedor WHERE medicamento.categoria_idcategoria = categoria.idcategoria AND medicamento.fornecedor_idfornecedor = fornecedor.idfornecedor order by medicamento.nome");
   
    }
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
    String sql = "SELECT medicamento.idmedicamento, medicamento.nome, medicamento.valor, medicamento.qtd, medicamento.descricao, medicamento.validade, categoria.nome_categoria, fornecedor.nome_fornecedor FROM medicamento, categoria, fornecedor WHERE medicamento.categoria_idcategoria = categoria.idcategoria AND medicamento.fornecedor_idfornecedor = fornecedor.idfornecedor ";
     if(txtValor.getText() != ""){
         sql = sql + " and  NOME LIKE '%" + txtValor.getText()+"%'";
         
     }
     if(cmbCategoria.getSelectedIndex()!=0){
         sql = sql + " and medicamento.categoria_idcategoria  = " + cmbCategoria.getSelectedIndex();
     }
     if(cmbFornecedor.getSelectedIndex()!=0){
         sql = sql + " and medicamento.fornecedor_idfornecedor  = " + cmbFornecedor.getSelectedIndex();
     }
    
       sql += " order by medicamento.nome";
       PopularJTable(sql);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategoriaActionPerformed
        newCategoria janela = new newCategoria();
        janela.setVisible(true);
       
    }//GEN-LAST:event_btnCategoriaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PopularJTable("SELECT medicamento.idmedicamento, medicamento.nome, medicamento.valor, medicamento.qtd, medicamento.descricao, medicamento.validade, categoria.nome_categoria, fornecedor.nome_fornecedor FROM medicamento, categoria, fornecedor WHERE medicamento.categoria_idcategoria = categoria.idcategoria AND medicamento.fornecedor_idfornecedor = fornecedor.idfornecedor order by medicamento.nome");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        id = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        Nome = jTable1.getValueAt(jTable1.getSelectedRow(),1).toString();
        Valor = jTable1.getValueAt(jTable1.getSelectedRow(),2).toString();
        Qtd = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        Descricao = jTable1.getValueAt(jTable1.getSelectedRow(),4).toString();
        Validade = jTable1.getValueAt(jTable1.getSelectedRow(),5).toString();
        Categoria = jTable1.getValueAt(jTable1.getSelectedRow(),6).toString();
        Fornecedor = jTable1.getValueAt(jTable1.getSelectedRow(),7).toString();
        /*Valor;
    Qtd;
     Descricao;
     Categoria;
    Fornecedor;*/
    }//GEN-LAST:event_jTable1MouseClicked

    private void jPanel1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel1FocusGained
                     PopularJTable("SELECT medicamento.idmedicamento, medicamento.nome, medicamento.valor, medicamento.qtd, medicamento.descricao, medicamento.validade, categoria.nome_categoria, fornecedor.nome_fornecedor FROM medicamento, categoria, fornecedor WHERE medicamento.categoria_idcategoria = categoria.idcategoria AND medicamento.fornecedor_idfornecedor = fornecedor.idfornecedor order by medicamento.nome");
    }//GEN-LAST:event_jPanel1FocusGained
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaEstoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCategoria;
    private javax.swing.JButton btnDeletarM;
    private javax.swing.JButton btnEditarM;
    private javax.swing.JButton btnNovoM;
    private javax.swing.JComboBox<String> cmbCategoria;
    private javax.swing.JComboBox<String> cmbFornecedor;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

 private void deletarMedicamento(int id) {
        String sql = "DELETE FROM MEDICAMENTO WHERE IDmedicamento ="+id;
                try{
                   conn = Conexao.obterConexao();
                   stm = conn.prepareStatement(sql);
                   stm.execute();
                     JOptionPane.showMessageDialog(this,
                             "Medicamento deletado com suceso...");
                }
                catch(SQLException | HeadlessException erro){
                 JOptionPane.showMessageDialog(this,
                         erro.getMessage());
                }
                finally{
                   Conexao.fecharConexao(conn, stm);
                }
    }
 
 
 
   private void prepararTabela() {
       
        String[] nomesDasColunas = {"ID","NOME", "VALOR", "QTD", "DESCRICAO", "VALIDADE", "CATEGORIA", "FORNECEDOR"};
        
        
       DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
       modelo.setNumRows(0);
       modelo.setColumnIdentifiers(nomesDasColunas);
       
       
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); 
       jTable1.getColumnModel().getColumn(0).setPreferredWidth(75);
       jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
       jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
       jTable1.getColumnModel().getColumn(3).setPreferredWidth(150);
       jTable1.getColumnModel().getColumn(4).setPreferredWidth(150);
       jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
       jTable1.getColumnModel().getColumn(6).setPreferredWidth(150);
       jTable1.getColumnModel().getColumn(7).setPreferredWidth(150);
       
       if(rs != null){
           try{
               while(rs.next()){
                   modelo.addRow(
                     new String[] {
                         rs.getString("ID"),
                         rs.getString("NOME"),
                         rs.getString("VALOR"),
                         rs.getString("QTD"),
                         rs.getString("DESCRICAO"),
                         rs.getString("VALIDADE"),
                         rs.getString("CATEGORIA"),
                         rs.getString("FORNECEDOR")
          
                     }
                   );
               }
               jTable1.setModel(modelo);
           }catch(SQLException erro){
             JOptionPane.showMessageDialog(null, erro.getMessage());
           }
        }   
    }

   public void PopularJTable(String sql) {
  try
  {
   this.conn = Conexao.obterConexao();
   PreparedStatement stm = (PreparedStatement)conn.prepareStatement(sql);
   stm.execute(); // cria o vetor
 
  this.rs = stm.executeQuery(sql);
 
   DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
   model.setNumRows(0);
 
   while(rs.next())
   {
       model.addRow(new Object[] 
       { 
                         rs.getString("idmedicamento"),
                         rs.getString("nome"),
                         rs.getString("valor"),
                         rs.getString("qtd"),
                         rs.getString("descricao"),
                         rs.getString("validade"),
                         rs.getString("nome_categoria"),
                         rs.getString("nome_fornecedor")
       }); 
  }   
   stm.close();
   conn.close();
  }
 catch (SQLException ex)
 {
    System.out.println("o erro foi " +ex);
  }
 }
   private void inserirCategoria(){
    String sql = "Select nome_categoria from CATEGORIA";
    try{
        cmbCategoria.removeAllItems();
        cmbCategoria.addItem("Selecione a Categoria");
        conn = Conexao.obterConexao();
        stm = conn.prepareStatement(sql);
        rs = stm.executeQuery();
        
        
        while(rs.next()){
            cmbCategoria.addItem(rs.getString("nome_categoria"));
        }
    }catch(Exception erro){
        JOptionPane.showMessageDialog(null, erro);
    }finally{
        Conexao.fecharConexao(conn, stm, rs);
    }
    
    }
    private void inserirFornecedor(){
    String sql = "Select nome_fornecedor from FORNECEDOR";
    try{
        cmbFornecedor.removeAllItems();
        cmbFornecedor.addItem("Selecione o Fornecedor");
        conn = Conexao.obterConexao();
        stm = conn.prepareStatement(sql);
        rs = stm.executeQuery();
        
        
        while(rs.next()){
            cmbFornecedor.addItem(rs.getString("nome_fornecedor"));
        }
    }catch(Exception erro){
        JOptionPane.showMessageDialog(null, erro);
    }finally{
        Conexao.fecharConexao(conn, stm, rs);
    }
    
    }
}
